@page "/signup"
@rendermode InteractiveServer
@inject NavigationManager Navigator
@inject HttpClient httpClient

<PageTitle>SignUp</PageTitle>

<h3>Signup</h3>

<div class="form-container" align="center">
    <EditForm Model="userDetails" FormName="SignUpForm" class="form-group w-50" OnSubmit="RegisterUser">
        <div class="mb-3">
            <label class="form-label" for="firstname">FirstName</label>
            <input type="text" class="form-control" id="firstname" @bind-value=userDetails.FirstName placeholder="Enter the Firstname" required/>
        </div>
        <div class="mb-3">
            <label class="form-label" for="lastname">LastName</label>
            <input type="text" class="form-control" id="lastname" @bind-value=userDetails.LastName placeholder="Enter the Lastname" required />
        </div>
        <div class="mb-3">
            <label class="form-label" for="username">UserName</label>
            <input type="text" class="form-control" id="username" @bind-value=userDetails.UserName placeholder="Enter the Username" required />
        </div>
        <div class="mb-3">
            <label class="form-label" for="password">Password</label>
            <input type="password" class="form-control" id="password" @bind-value=userDetails.Password placeholder="Enter the Password" required />
        </div>
        <button class="btn btn-primary" type="submit">Submit</button>
    </EditForm>
    <p class="text-center mt-3">@message</p>
</div>
@code {
    public class UserDetails
    {
        public string FirstName { get; set; } = null!;
        public string LastName { get; set; } = null!;
        public string UserName { get; set; } = null!;
        public string Password { get; set; } = null!;
    }

    public UserDetails userDetails = new();
    string message = "";

    private async Task RegisterUser()
    {
        try
        {
            var res = await httpClient.PostAsJsonAsync("http://localhost:5075/Todo/AddUser", userDetails);
            if(res.IsSuccessStatusCode)
            {
                message = await res.Content.ReadAsStringAsync();
                if(Navigator != null)
                {
                    Navigator.NavigateTo("/");
                }
            }
            else
            {
                message = $"Validation Failed. Retry Again {res.StatusCode} and {message}";
            }
        }
        catch(Exception e)
        {
            message = $"Error Occured: {e}";
        }
    }
}
